{"version":3,"sources":["fire.js","Login.js","logo.svg","Hero.js","App.js","reportWebVitals.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Login","props","email","setEmail","password","setPassword","handleLogin","handleSigup","hasAccount","setHasAccount","emailError","passwordError","useState","rePass","setRepass","rePassErr","setRepassErr","className","type","autoFocus","required","value","onChange","e","target","onClick","disabled","Hero","handleLogout","App","user","setUser","setEmailError","setPasswordError","clearErrors","authListener","auth","onAuthStateChanged","useEffect","signOut","signInWithEmailAndPassword","catch","err","code","message","createUserWithEmailAndPassword","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c811bb43.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBDdkTHF9l4dQ_eFsIZPi5VzUsrNZNbBC8\",\r\n    authDomain: \"login-a7420.firebaseapp.com\",\r\n    databaseURL: \"https://login-a7420.firebaseio.com\",\r\n    projectId: \"login-a7420\",\r\n    storageBucket: \"login-a7420.appspot.com\",\r\n    messagingSenderId: \"151012491373\",\r\n    appId: \"1:151012491373:web:e43dd9c0573e353f93bf64\"\r\n  };\r\n  const fire = firebase.initializeApp(firebaseConfig);\r\n\r\n  export default fire;","import React, { useState } from 'react'\r\n\r\nconst Login = (props) => {\r\n\r\n    const { email, setEmail, password, setPassword, handleLogin, handleSigup, hasAccount, setHasAccount, emailError, passwordError } = props;\r\n    const [rePass, setRepass] = useState('')\r\n    const [rePassErr, setRepassErr] = useState('');\r\n\r\n    return (\r\n        <section className=\"login\">\r\n            <div className=\"loginContainer\">\r\n                <label>Username</label>\r\n                <input type=\"text\" autoFocus required value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                <p className=\"errorMsg\">{emailError}</p>\r\n                <label>Password</label>\r\n                <input type=\"password\" required value={password} onChange={(e) => setPassword(e.target.value)} />\r\n                <p className=\"errorMsg\">{passwordError}</p>\r\n                {!hasAccount ? (\r\n                    <>\r\n                        <label>Re-Enter Password</label>\r\n                        <input type=\"password\" required value={rePass} onChange={(e) => setRepass(e.target.value)} />\r\n                        <p className=\"errorMsg\">{rePassErr}</p>\r\n                    </>\r\n                ) : ('')\r\n                }\r\n\r\n                <div className=\"btnContainer\">\r\n                    {hasAccount ? (\r\n                        <>\r\n                            <button onClick={handleLogin}>Sign In</button>\r\n                            <p>Don't have an account ? <span onClick={() => setHasAccount(!hasAccount)}>Sign Up</span></p>\r\n                        </>\r\n                    ) : (\r\n                            <>\r\n                                <button disabled={!rePass} onClick={() => {\r\n                                    if (password !== rePass) {\r\n                                        setRepassErr('Password not match !!')\r\n                                    }\r\n                                    else {\r\n                                        setRepassErr('')\r\n                                        handleSigup()\r\n                                    }\r\n\r\n                                }}>Sign Up</button>\r\n                                <p>Have an account ? <span onClick={() => setHasAccount(!hasAccount)}>Sign In</span></p>\r\n                            </>\r\n                        )}\r\n                </div>\r\n\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Login;","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react'\r\n\r\nconst Hero = ({ handleLogout }) => {\r\n    return (\r\n        <section className=\"hero\">\r\n            <nav>\r\n                <h2>Welcome</h2>\r\n                <button onClick={handleLogout}>Logout</button>\r\n            </nav>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Hero;","import React, { useState, useEffect } from 'react'\nimport fire from './fire'\nimport logo from './logo.svg';\nimport Login from './Login'\nimport './App.css';\nimport Hero from './Hero';\n\nfunction App() {\n  const [user, setUser] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [hasAccount, setHasAccount] = useState(false);\n\n  const clearInputs = () => {\n    setEmail('');\n    setPassword('');\n  }\n\n  const clearErrors = () => {\n    setEmailError('');\n    setPasswordError('');\n  }\n\n  const handleLogin = () => {\n    clearErrors();\n    fire\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .catch(err => {\n        switch (err.code) {\n          case \"auth/invalid-email\":\n          case \"auth/user-diabled\":\n          case \"auth/user-not-found\":\n            setEmailError(err.message);\n            break;\n          case \"auth/wrong-password\":\n            setEmailError(err.message);\n            break;\n        }\n      });\n  };\n\n  const handleSigup = () => {\n    clearErrors();\n    fire\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .catch(err => {\n        switch (err.code) {\n          case \"auth/email-already-in-use\":\n          case \"auth/invalid-email\":\n            setEmailError(err.message);\n            break;\n          case \"auth/weak-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n  };\n\n  const handleLogout = () => {\n    fire.auth().signOut();\n  };\n\n  const authListener = () => {\n    fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        clearInputs();\n        setUser(user);\n      }\n      else {\n        setUser(\"\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListener();\n  }, [])\n\n  return (\n    <div className=\"App\">\n      {user ? (\n        <Hero handleLogout={handleLogout} />\n      ) : (\n          <Login\n            email={email}\n            setEmail={setEmail}\n            password={password}\n            setPassword={setPassword}\n            handleLogin={handleLogin}\n            handleSigup={handleSigup}\n            hasAccount={hasAccount}\n            setHasAccount={setHasAccount}\n            emailError={emailError}\n            passwordError={passwordError}\n          />\n        )}\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}